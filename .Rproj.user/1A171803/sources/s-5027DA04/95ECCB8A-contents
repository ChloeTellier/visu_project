---
title: "La co-inertie"
author: "Antoine Lucas, Julien Petot, Chloé Tellier"
institute: "Agrocampus Ouest"
date: "`r Sys.Date()`"
output:
  xaringan::moon_reader:
    lib_dir: libs
    css: ["xaringan-themer.css"]
    chakra: libs/remark-latest.min.js
    nature:
      highlightStyle: solarized-light
      highlightLines: true
      countIncrementalSlides: false
---

```{r setup, include = FALSE}
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(out.width = "40%",out.height = "40%",
                      warning = FALSE, eval=TRUE,
                      out.extra='style="float:left; padding:10px"')

```

```{r packages, include = FALSE}

# Load necessary packages for generation of R code in the presentation

## Only needed to run for the set-up

#devtools::install_github("gadenbuie/xaringanExtra")

library(ade4)
library(adegraphics)
library(xaringan)
library(xaringanthemer)
library(xaringanExtra)
library(showtext)

```

```{r xaringanExtra, include = FALSE}

xaringanExtra::use_tachyons()
xaringanExtra::use_tile_view()
xaringanExtra::use_editable(expires = 1)
xaringanExtra::use_panelset()
xaringanExtra::use_extra_styles(hover_code_line = TRUE)

```

```{r xaringan-themer, include=FALSE}
# sélection du thème de couleurs du slideshow
style_duo(primary_color = "#1F4257", secondary_color = "#F97B64",
          header_h1_font_size="2rem",header_h2_font_size="1.5rem")
```
class: center, middle 

# Plan de la présentation 

1) La co-inertie : présentation

2) Application à des données d'écologie

---
class: top

# 1) La co-inertie : présentation
## Cadre général

- On a 2 tableaux : mêmes individus et différentes variables 

--

- On regarde les structures communes entre les 2 tableaux

--

Cadre typique : 
- le premier tableau contient plutôt des variables réponses 

- le deuxième tableau contient plutôt des variables explicatives <br>

--

Exemple : 
- le premier tableau contient, pour différentes stations de mesures, les données d'abondance d'espèces de poissons

- le deuxième tableau contient, pour les mêmes stations de mesures, des variables environnementales.

*Objectif* : regarder les relations entre les données d'abondance et les données environnementales.

---

# 1) La co-inertie : présentation

## La démarche : analyses factorielles

- On réalise une analyse factorielle sur chacun des deux tableaux.

.center[
![analyse factorielle](figures/schema_coinertia1.png)
]

---

# 1)  La co-inertie : présentation

## La démarche : co-inertie

- On réalise la co-inertie sur les deux nuages de points obtenus.

.center[
```{r echo=FALSE, out.height= "35%", out.extra=FALSE}
knitr::include_graphics("figures/schema_coinertia2.png")
```
]

--

- On couple  ensuite ces 2 nuages de points par le critère de maximisation de la covariance : 
$$\operatorname{cov}^{2}\left(X Q u_{1}, Y R v_{1}\right)=\operatorname{cor}^{2}\left(X Q u_{1}, Y R v_{1}\right) \operatorname{var}\left(X Q u_{1}\right) \operatorname{var}\left(Y R v_{1}\right)$$

--

- On obtient ainsi un seul sous-espace, maximisant les relations entre les projections des 2 tableaux.

---
# 1)  La co-inertie : présentation
## Contraintes

- Les individus doivent être identiques, et dans le même ordre dans les deux tableaux.

--

- Dans chacune des analyses factorielles réalisées, les individus doivent avoir la même pondération, *i.e* les poids attribués à la première analyse factorielle doivent être identiques aux poids de la seconde analyse factorielle.

---
# 1)  La co-inertie : présentation
## La démarche : test de co-structure

Les relations entre les deux tableaux sont indiqué par le coefficient de corrélation RV.

--

Le coefficient RV est compris entre 0 et 1.

--

- RV proche de 1 : forte correlation entre nos 2 tableaux.
- RV proche de 0 : faible correlation.

---

# 1)  La co-inertie : présentation
## La démarche : test de co-structure

On cherche à tester la significativité de la co-structure entre les 2 tableaux.

--

- On calcule le coefficient RV entre les 2 tableaux (coefficient de corrélation)
- Puis on permute les lignes d'un des 2 tableaux
- Enfin on recalcule le coefficient RV en prenant en compte ce 'nouveau tableau'. On itère ce processus un grand nombre de fois.

--

.center[
```{r echo=FALSE, out.height= "35%", out.extra=FALSE}
knitr::include_graphics("figures/Rplot.png")
```
]

--

__Attention__ : le tableau sur lequel on effectue les permutations de ligne ne doit pas être celui qui a fourni les pondérations utilisées en analyse factorielle.

---

# 2) Application à des données d'écologie
## Simulation du premier tableau : données d'abondances 

```{r include=FALSE}
# Chunk non inclus dans la présentation

##### On construit le premier tableau

# C'est une simulation des abondances d'espèces dans plusieurs stations
# Ces stations sont au nombre de 16
# Elles sont réparties régulièrement le long d'un gradient de température
# On suppose que les abondances des espèces sont données par le modèle dit des températures cardinales
# Il y a en tout 10 espèces observées

# Fonction d'abondance des poissons
CTMI <- function(T, param)
{
  Tmin <- param[1]
  Topt <- param[2]
  Tmax <- param[3]
  Muopt <- param[4]
  if( T <= Tmin || T >= Tmax )
  # Si on est en dessous de la température min ou au dessus de la température max, le poisson est absent
  {
    return(0)
  }
  else
  # Si on est entre Tmin et Tmax
  {
      Num <- (T-Tmax)*(T-Tmin)^2
      Den <- (Topt-Tmin)*((Topt-Tmin)*(T-Topt)-(Topt-Tmax)*(Topt+Tmin-2*T))
      return(Muopt*Num/Den)
  }
}

# 16 stations, avec leurs températures moyennes
Tstations <- seq(from = 5, to = 80, by = 5)
Tstations
length(Tstations)

nsp <- 10 # Nombre d'espèces
topt <- seq(from = 5, to = 100, length = nsp) # Températures optimales, une par espèce
tmin <- 0.953*topt - 28.913 # Température minimale, une par espèce
tmax <- 1.101*topt + 3.203 # Température maximale, une par espèce

# On construit le tableau :
# 10 lignes correspondant aux 10 espèces, 16 colonnes correspndant aux 16 stations
data <- data.frame(matrix(nrow = nsp, ncol = length(Tstations)))
colnames(data) <- paste("st",1:length(Tstations), sep = "")
rownames(data) <- paste("sp", round(topt, 0), sep = "")

for( i in 1:nsp ){
  for( j in 1:length(Tstations))
  {
    # Pour chaque case de data, on simule la valeur à partir de la température de la station, de la
    # température optimale de l'espèce, de la température maximale, de la température minimale, de Muopt,
    # et de la fonction CTMI
    data[i, j] <- round(CTMI(T = Tstations[j], param = c(tmin[i], topt[i],tmax[i], 1000)), 0)
  }
}

# On va visualiser tout ça
Taxis <- 1:100
cols <- rev(rainbow(nsp, end = 5/6))
plot(x = Taxis, y = sapply(Taxis, CTMI, param = c(tmin[1], topt[1], tmax[1], 1000)), type = "l",
     col = cols[1], main = paste("Répartition des", nsp, "espèces"), xlab = "Température [C]",
     ylab = "Nombre d'individus", lwd = 2)
for( i in 2:nsp ){
  lines(x = Taxis, y = sapply(Taxis, CTMI, param = c(tmin[i], topt[i], tmax[i], 1000)),
        col = cols[i], lwd = 2)
}

# La structure des données est très simple, on a une succession des espèces le long du gradient
table.value(data, clegend=0)
# En abscisse les stations, en ordonnée les espèces

data.vv <- data[sample(nrow(data)), sample(ncol(data))] # On permute aléatoirement lignes et colonnes
head(data.vv[,1:15])

afc <- dudi.coa(data.vv,scannf = F)
scatter(afc)

data.vv.ord <- data.vv[order(afc$li[, 1]), order(afc$co[, 1])]
```

--

On crée un jeu de données qui contient :
- 16 stations de mesure en ligne
- 10 espèces de poissons en colonnes avec des données d'abondances <br>

On a donc 16 individus et 10 variables.

--

.center[
```{r echo=FALSE, out.height= "35%"}
table.value(data.vv.ord)
```
]
On constate que pour chaque station certains poissons sont présents et d'autres sont absents. <br>
Les stations semblent être réparties selon un gradient (mais de quelle variable ?) qui conditionne la présence et l'absence de certaines espèces.

---

# 2) Application à des données d'écologie

## Simulation du deuxième tableau : données environnementales 

```{r include=FALSE}
# Chunk non inclus dans la présentation

##### On construit le deuxième tableau

# Mesure de la température dans chaque station, pour chaque heure de la journée
mesureT <- sapply(Tstations, function(x){10*sin(seq(0, pi, le = 24)) + x})

# Donc tableau avec 24 lignes et 16 colonnes
colnames(mesureT) <- paste("st",1:16,sep="")
rownames(mesureT)<-paste("h",1:24,sep="")
plot(0, type = "n", xlim = c(1,24), ylim = range(mesureT), xlab = "Heures", ylab = "Temperature",
     las = 1, main = "Température des stations") # Cadre vide
apply(mesureT, 2, lines) # 2 donc application en colonne, donc on affiche une courbe par station

# On ajoute un bruit Gaussien, pour plus de réalisme
set.seed(1)
mesureT <- sapply(Tstations, function(x){10*sin(seq(0, pi,le = 24)) + x + rnorm(n = 24, sd = 5)})
colnames(mesureT) <- paste("st", 1:16, sep = "")
rownames(mesureT) <- paste("h", 1:24, sep = "")

head(mesureT[,1:7])
```

--

On crée un jeu de données qui contient pour les 16 stations de mesure la température à chaque heure de la journée.

On a donc : 
- 16 individus (nos stations).
- 24 variables (chaque heure de la journée).

--
.center[
```{r echo=FALSE, out.height= "35%", out.extra=FALSE}
# knitr::include_graphics("figures/line_plot_tab2.png")
plot(0, type = "n", xlim = c(1,24), ylim = range(mesureT), xlab = "Heures", ylab = "Temperature",
     las = 1, main = "Température des stations") # Cadre vide
apply(mesureT, 2, lines)
```
]

---

# 2) Application à des données d'écologie

## Réalisation de l'AFC du premier tableau

On réalise l'Analyse Factorielle des Correspondances du premier tableau.

--

```{r out.height="35%", out.extra=FALSE, fig.align="center"}
afc <- dudi.coa(data.vv,scannf = F)
scatter(afc)
```

--

On visualise bien l'effet Guttman : les données ont une forme de parabole.

---

# 2) Application à des données d'écologie

## Réalisation de l'ACP du deuxième tableau

On réalise l'Analyse en Composante Principale du second tableau.

--

```{r eval=TRUE, out.height="35%"}
acp <- dudi.pca(t(mesureT), scan=FALSE) 
scatter(acp)
```

--

Le premier axe de l'ACP explique plus de 99% de la variabilité : il s'agit du gradient de température entre les différentes stations.

---

# 2) Application à des données d'écologie

## Vérifications nécessaires à la réalisation de la co-inertie

.pull-left[1) On vérifie que les individus sont bien en ligne dans les deux tableaux. 
```{r eval=TRUE}
dim(data)
dim(mesureT)
```

Il faut transposer nos tableaux pour mettre les stations de mesure en ligne. <br>
```{r eval=TRUE}
tab1 <- as.data.frame(t(data)) ; tab2 <- as.data.frame(t(mesureT))
dim(tab1) ; dim(tab2)
```
]

--

.pull-right[
2) On vérifie que les individus sont bien dans le même ordre dans les deux tableaux. <br>
```{r eval=TRUE}
all.equal(rownames(tab1),rownames(tab2))
```

3) On vérifie que la même pondération a été utilisée pour les deux analyses.
```{r eval=TRUE}
coa <- dudi.coa(df = tab1, scannf = FALSE, nf = 2)
pca <- dudi.pca(df = tab2, row.w = coa$lw, scannf = FALSE, nf = 2)
all.equal(pca$lw,coa$lw)
```
]

---

# 2) Application à des données d'écologie

## Réalisation de la co-inertie

Une fois les vérifications effectuées, on peut utiliser l'analyse de co-inertie pour coupler les deux tableaux.

```{r}
cia <- coinertia(dudiX = pca, dudiY = coa, scannf = FALSE, nf = 2)
```

--

Regardons les deux premières valeurs propres :

```{r eval=TRUE}
cia$eig[1]/sum(cia$eig) ; cia$eig[2]/sum(cia$eig)
```

Le premier facteur extrait 99.3% de la variabilité : il s'agit du gradient thermique.

---

# 2) Application à des données d'écologie

## Coefficient RV et test de la significativité

On regarde tout d'abord le coefficient RV, qui mesure la co-structure entre les deux tableaux.
```{r}
cia$RV
```

--

Il faut ensuite vérifier la significativité de ce coefficient : pour cela on le compare avec la distribution empirique du coefficient RV lorsque l'on détruit la co-structure entre les deux tableaux (en permutant les lignes de l'un d'entre eux).

--

```{r warning=FALSE, out.height="30%",out.extra="30%", out.extra='style="float:left; padding:10px"'}
ciatest <- randtest(cia, nrepet =  999, fixed = 2)
```

---

# 2) Application à des données d'écologie

## Coefficient RV et test de la significativité

```{r warning=FALSE, out.height="35%", out.extra=FALSE, fig.align="center"}
plot(ciatest)
```

--

RV est bien supérieur à sa distribution empirique. Il y a donc bien une corrélation importante entre les structures des deux tableaux. <br>

---

# 2) Application à des données d'écologie

## Conclusion

- Les deux tableaux ont des structures très similaires. <br>

--

- Les stations de mesure sont en effet disposées selon un gradient de température. <br>

--

- Or, la présence de chaque espèce de poisson dépend de la température optimale de l'espèce, et des températures minimales / maximales qu'elle peut supporter. <br>

--

- Il y a donc une forte corrélation entre les données de la première table et de la deuxième.

--

- Il convient donc d'analyser le plan de co-inertie crée, à l'aide d'outils 'classiques' : graphe des individus, des variables ...

---

# Pour résumer

Les packages nécessaires : `{ade4}` et `{adegraphics}` <br>

--

La démarche à adopter :

--

- Etape 1 : réaliser, pour chaque tableau, une analyse factorielle simple (ACP, ACM, AFC) --> fonctions `ade4::dudi.pca` ou `ade4::dudi.fca` ou `ade4::dudi.acm`
  
--

- Etape 2 : effectuer les vérifications nécessaires (individus identiques et dans le même ordre, poids de chaque individu identique dans chacune des analyses factorielles)

--

- Etape 3 : effectuer la co-inertie entre les deux plans factoriels --> fonction `ade4::coinertia(pca1, pca2)`

--

- Etape 4 : tester la significativité du coefficient RV entre les deux tableaux (test de Monte-Carlo) --> fonction `randtest(results_coinertia, nrepet=999)`

--

- Etape 5 : si le test est intéressant, interprétation des analyses de co-inertie (valeurs propres, graphiques)

--

Pour aller plus loin, on peut s'intéresser non pas à une analyse de co-inertie à 2 tableaux, mais à K tableaux !

---

# Bibliographie 

- Chessel D. and Hanafi M. “Analyses de la co-inertie de K nuages de points.” (1996)
[1](http://www.numdam.org/article/RSA_1996__44_2_35_0.pdf)

- Lobry J.R. "Analyse de co-inertie sur données simulées et sur
données protéomiques." (2017) [2](https://pbil.univ-lyon1.fr/R/pdf/tdr641.pdf)

- de Magny C. et al. "De la statistique élémentaire à l'analyse de co-inertie." (2006) [3](https://www.researchgate.net/publication/282171950_De_la_statistique_elementaire_a_l'analyse_de_co-inertie) 

-  Pannard A. Rennes 2, "Multivariate analysis in Ecology"

---
class: center, middle

# Merci pour votre attention ! 

Slides crée via le package R [**xaringan**](https://github.com/yihui/xaringan). <br>

Les informations sont disponibles à cette [adresse github](https://github.com/antoinelucasfra/co-inertia_project).
